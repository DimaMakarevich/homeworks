#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }

    environment {
        python = "C:\\Users\\DmitryMakarevich\\AppData\\Local\\Programs\\Python\\Python38\\python"
        //Python = "C:\\Windows\\py.exe"
        py = "C:\\Windows\\py.exe"

    }

    stages {
        stage("First step") {
            steps {
                bat "echo ${python}"
                bat "echo ${py}"
                bat 'echo \'Hello World Jenkins\''
            }
        }

        stage("Compile jar file") {
            steps {
                bat 'dir'
                dir("6_Java") {
                    withMaven {
                        bat 'C:\\"Program Files (x86)"\\apache-maven\\bin\\mvn clean install'
                    }
                }
            }
        }

        stage("Run program") {
            steps {
                bat 'dir'
                dir("6_Java\\target") {
                    // bat 'java -jar 6_Java-1.0-SNAPSHOT.jar -sdb'
                    bat 'dir'
                }
            }
        }

        stage("Build docker") {
            steps {
                dir("7_CI_CD") {
                    bat "docker-compose -f docker-compose.yaml build"
                }

            }
        }

        stage("Push images") {
            steps {
                bat "docker login -u pampastu -p Dima1790426"
                // bat "docker image tag mysql:8.0.23 pampastu/mysql:1.0"
                // bat "docker image tag 7_ci_cd_ubuntu pampastu/ci_cd_ubuntu:1.0"
                //bat "docker push pampastu/mysql:1.0"
                // bat "docker push pampastu/ci_cd_ubuntu:1.0"
            }
        }


        //  aws ssm send-command --instance-ids  'i-00e70299431fe89e8'  --region eu-central-1  --document-name 'AWS-RunShellScript' --parameters 'commands=[mkdir /home/ec2-user/3]'

        stage("Deploy in AWS") {
            steps {
              //  bat "python --version"
                bat "ftype Python=\"C:\\Users\\DmitryMakarevich\\AppData\\Local\\Programs\\Python\\Python38\\python.exe %1 %*\""
                bat "python --version"
                bat "C:\\Users\\DmitryMakarevich\\AppData\\Local\\Programs\\Python\\Python38\\Scripts\\aws ssm send-command " +
                        " --instance-ids i-00e70299431fe89e8" +
                        " --document-name 'AWS-RunShellScript'" +
                        " --region eu-central-1" +
                        " --parameters 'command=[sudo service docker start, " +
                        " rm -rf /home/ec2-user/homeworks," +
                        " git clone git@bitbucket.org:MakarevichDmitry/homeworks.git /home/ec2-user/homeworks," +
                        " docker rm -f \$(docker ps -a -q)," +
                        " docker rmi -f \$(docker images -q)," +
                        " docker-compose -f /homeworks/7_CI_CD/docker-compose_AWS.yaml' up -d," +
                        " docker exec ubuntu java -jar '7_CI_CD/java/6_Java-1.0-SNAPSHOT-jar-with-dependencies.jar' -sdb"
            }
        }
    }
}